name: build, push and deploy

on:
  workflow_run:
    workflows:
      - validate and test
    types:
      - completed
    branches: [main]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    container: docker:19.03.5
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: Build image and push to ECR
        run: |
          apk add python3
          pip3 install awscli
          docker build --compress -t ${{ secrets.ECR_REPO }}:$GITHUB_SHA .
          $(aws ecr get-login --no-include-email --region us-east-1)
          docker push ${{ secrets.ECR_REPO }}:$GITHUB_SHA
          docker tag ${{ secrets.ECR_REPO }}:$GITHUB_SHA ${{ secrets.ECR_REPO }}:latest
          docker push ${{ secrets.ECR_REPO }}:latest


  ## 
  ## The following step allows infrastructure to be deployed via NPM script (still requires Terraform binary, hence Terraform base image)
  ## Commented out in favour of tradtional `terraform apply` command
  ##
  # cdktf_deploy:
  #   runs-on: ubuntu-latest
  #   container: hashicorp/terraform:0.13.4
  #   needs: [build_and_push]
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
  #     TF_VAR_db_username: ${{ secrets.TF_VAR_db_username }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: cdktf_deploy
  #       run: |
  #         echo "Running cdktf deploy..."
  #         export TF_VAR_ecr_image_api=${{ secrets.ECR_REPO }}:$GITHUB_SHA
  #         apk add --update nghttp2-dev nodejs npm
  #         cd infra/
  #         npm i
  #         npm run build
  #         npm run deploy:ci

  terraform_apply:
    runs-on: ubuntu-latest
    container: hashicorp/terraform:0.13.4
    needs: [build_and_push]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
      TF_VAR_db_username: ${{ secrets.TF_VAR_db_username }}
    steps:
      - uses: actions/checkout@v2
      - name: Terraform apply
        run: |
          echo "Running terraform_apply job..."
          export TF_VAR_ecr_image_api=${{ secrets.ECR_REPO }}:$GITHUB_SHA
          apk add --update nghttp2-dev nodejs npm
          cd terraform/cdktf-modules/
          npm i
          npm run build-and-synth
          cd cdktf.out/
          terraform init
          terraform workspace select staging || terraform workspace new staging
          terraform apply -auto-approve
