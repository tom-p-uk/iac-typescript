# This is a basic workflow to help you get started with Actions

name: build, push and deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_and_push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: docker:19.03.5
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: build_and_push
        run: |
          apk add python3
          pip3 install awscli
          docker build --compress -t ${{ secrets.ECR_REPO }}:$GITHUB_SHA ./api
          $(aws ecr get-login --no-include-email --region us-east-1)
          docker push ${{ secrets.ECR_REPO }}:$GITHUB_SHA
          docker tag ${{ secrets.ECR_REPO }}:$GITHUB_SHA ${{ secrets.ECR_REPO }}:latest
          docker push ${{ secrets.ECR_REPO }}:latest

  terraform_plan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: hashicorp/terraform:0.12.21
    needs: [build_and_push]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
      TF_VAR_db_username: ${{ secrets.TF_VAR_db_username }}
      TF_VAR_ecr_image_api: ${{ secrets.ECR_REPO }}:$GITHUB_SHA

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: terraform_plan
        run: |
          echo "running terraform_plan..."
          echo $TF_VAR_ecr_image_api | sed -e 's/\(.\)/\1\n/g'
          cd deploy/
          export 
          terraform init
          terraform workspace select staging || terraform workspace new staging
          terraform plan

  terraform_apply:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: hashicorp/terraform:0.12.21
    needs: [build_and_push, terraform_plan]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
      TF_VAR_db_username: ${{ secrets.TF_VAR_db_username }}
      TF_VAR_ecr_image_api: ${{ secrets.ECR_REPO }}:$GITHUB_SHA

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: terraform_apply
        run: |
          echo "running apply..."
          echo $TF_VAR_ecr_image_api | sed -e 's/\(.\)/\1\n/g'
          cd deploy/
          terraform init
          terraform workspace select staging
          terraform apply -auto-approve
